<div class="row">
    <h3>Change password</h3>
    <br /><br />
    <div class="row">
         
        <div class="col-md-3">
            <label class="dxeCaption_Material">  Existing password :</label>
        </div>
        <div class="col-md-8">
            @Html.DevExpress().TextBox(set =>
       {
           set.Name = "txtexstPwd";
           set.Properties.ValidationSettings.RequiredField.ErrorText = "This field is required";
           set.Properties.ValidationSettings.RequiredField.IsRequired = true;
           set.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
           set.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
       }).GetHtml()
        </div>
        <div class="col-md-1">
           
        </div>
       </div>
        <br /> 
    <div class="row">
        
        <div class="col-md-3">
            <label class="dxeCaption_Material">New password :</label>
        </div>
        <div class="col-md-8">

            @Html.DevExpress().TextBox(set =>
       {
           set.Name = "txtNewPwd";
           set.Properties.ValidationSettings.RequiredField.IsRequired = true;
           set.Properties.Password = true;
           set.Properties.ValidationSettings.RequiredField.ErrorText = "This field is required";
           set.Properties.ValidationSettings.RegularExpression.ErrorText = "The password must be 8 to 14 characters long one lower and upper case and a character and there should not have any of the following: comma,space,#,?,&,%,[,],";
           set.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"^\S*(?=\S{8,14})(?=\S*[0-9])(?=\S*[a-z])(?=\S*[A-Z])(?=\S*[-+.'@$*!}{':;)\/(])\S*$";
           set.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;

           set.Properties.ClientSideEvents.LostFocus = "matchPwd";
           set.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;

       }).GetHtml()
            @Html.DevExpress().TextBox(set =>
       {
           set.Name = "txtNewPwd1";
           set.ClientVisible = false;
           set.Properties.ValidationSettings.RequiredField.IsRequired = true;
           set.Properties.ValidationSettings.RequiredField.ErrorText = "This field is required";
           set.Properties.ValidationSettings.RegularExpression.ErrorText = "The password must be 8 to 14 characters long one lower and upper case and a character and there should not have any of the following: comma,space,#,?,&,%,[,],";
           set.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"^\S*(?=\S{8,14})(?=\S*[0-9])(?=\S*[a-z])(?=\S*[A-Z])(?=\S*[-+.'@$*!}{':;)\/(])\S*$";
           set.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;

           set.Properties.ClientSideEvents.LostFocus = "matchPwd";
           set.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;

       }).GetHtml()
        </div>
        <div class="col-md-1">
            <span class="glyphicon glyphicon-eye-open" onclick="showpwd('txtNewPwd')"></span>
        </div>
       </div>
        <br /> 
        <div class="row">
          
            <div class="col-md-3">
                <label class="dxeCaption_Material">    Confirm password :</label>
            </div>
            <div class="col-md-8">
                @Html.DevExpress().TextBox(set =>
           {
               set.Name = "txtCnfNewPwd"; set.Properties.Password = true;

               set.Properties.ValidationSettings.RequiredField.ErrorText = "This field is required";
               set.Properties.ValidationSettings.RequiredField.IsRequired = true;
               set.Properties.ValidationSettings.RegularExpression.ErrorText = "The password must be 8 to 14 characters long one lower and upper case and a character and there should not have any of the following: comma,space,#,?,&,%,[,],";
               set.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"^\S*(?=\S{8,14})(?=\S*[0-9])(?=\S*[a-z])(?=\S*[A-Z])(?=\S*[-+.'@$*!}{':;)\/(])\S*$";
               set.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
               set.Properties.ClientSideEvents.LostFocus = "matchPwd";
               set.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
           }).GetHtml()
                @Html.DevExpress().TextBox(set =>
           {
               set.Name = "txtCnfNewPwd1";

               set.ClientVisible = false;
               set.Properties.ValidationSettings.RequiredField.ErrorText = "This field is required";
               set.Properties.ValidationSettings.RequiredField.IsRequired = true;
               set.Properties.ValidationSettings.RegularExpression.ErrorText = "The password must be 8 to 14 characters long one lower and upper case and a character and there should not have any of the following: comma,space,#,?,&,%,[,],";
               set.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"^\S*(?=\S{8,14})(?=\S*[0-9])(?=\S*[a-z])(?=\S*[A-Z])(?=\S*[-+.'@$*!}{':;)\/(])\S*$";
               set.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
               set.Properties.ClientSideEvents.LostFocus = "matchPwd";
               set.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
           }).GetHtml()

                <span id='message'></span><br />
            </div>
            <div class="col-md-1">
                <span class="glyphicon glyphicon-eye-open" onclick="showpwd('txtCnfNewPwd')"></span>
            </div>
        </div>
        <br />
        <br />
        <br />
        <div class="col-md-3"></div><div class="col-md-6"><center>@Html.DevExpress().Button(set => { set.Name = "changePwd"; set.UseSubmitBehavior = false; set.Text = "Submit"; set.ClientSideEvents.Click = "ChangePassWord1"; }).GetHtml()</center></div><div class="col-md-3"></div>
        <br />
        <br />
    </div>

</div>