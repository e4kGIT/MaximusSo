@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "CartView";
        settings.CallbackRouteValues = new { Controller = "Private", Action = "CartView" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Private", Action = "CartViewAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Private", Action = "CartViewUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Private", Action = "CartViewDelete" };
        //settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.Settings.ShowFilterRow = false;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.CommandColumn.Visible = false;
        settings.SettingsDetail.ShowDetailRow = true;
        //settings.ClientSideEvents.RowClick = "FillAllCurrentHeaderData";
        //settings.ClientSideEvents.RowDblClick = "EditEmp";
        settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;
        // settings.CommandColumn.ShowNewButton = true;
        //settings.CommandColumn.ShowDeleteButton = true;
        //settings.CommandColumn.ShowEditButton = true;
        settings.SetDetailRowTemplateContent(x =>
        {
            Html.RenderAction("CartviewDetailGridViewGridViewPartial", new { empId = x.KeyValue });
        });
        settings.ClientSideEvents.Init = "Expand";
      
        settings.SettingsCommandButton.EditButton.Image.IconID = IconID.EditEdit16x16;
        settings.SettingsCommandButton.EditButton.RenderMode = GridCommandButtonRenderMode.Image;

        settings.SettingsCommandButton.DeleteButton.Image.IconID = IconID.EditDelete16x16;
        settings.SettingsCommandButton.DeleteButton.RenderMode = GridCommandButtonRenderMode.Image;

        settings.SettingsCommandButton.CancelButton.Image.IconID = IconID.ActionsCancel16x16;
        settings.SettingsCommandButton.CancelButton.RenderMode = GridCommandButtonRenderMode.Image;

        settings.SettingsCommandButton.UpdateButton.Image.IconID = IconID.OtherUpdatetable16x16gray;
        settings.SettingsCommandButton.UpdateButton.RenderMode = GridCommandButtonRenderMode.Image;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 5;
        if (Convert.ToBoolean(Session["ISEDITING"])==false)
        {
            settings.ClientSideEvents.BeginCallback = "OnBeginCallback";
        }
        settings.KeyFieldName = "EmployeeID";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 5;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;
        //    Address = dp.getEmployeeAddress(Session["SelectedEmp"].ToString(), Session["BuisnessId"].ToString()), EmployeeName = Session["EmpName"].ToString(), EmployeeID = Session["SelectedEmp"].ToString(), CustRef = entity.tblsop_salesorder_header.AsEnumerable().Where(x => x.CustID == Session["BuisnessId"].ToString()).First().CustRef, Comments = entity.tblsop_salesorder_header.AsEnumerable().Where(x => x.CustID == Session["BuisnessId"].ToString()).First().Comments });
        //var modelq = (List<SalesOrderLineViewModel>)Session["SalesOrderLines"];
        //settings.Columns.Add(x => { x.FieldName = "LineNo"; x.Caption = "Line no"; x.ReadOnly = true; });
        settings.Columns.Add(x => { x.FieldName = "EmployeeID"; x.Caption = "Employee Id"; x.ReadOnly = true; x.EditFormSettings.Visible = DefaultBoolean.False; });
        settings.Columns.Add(x => { x.FieldName = "EmployeeName"; x.Caption = "Employee Name"; x.ReadOnly = true; x.EditFormSettings.Visible = DefaultBoolean.False; });
        if(Convert.ToBoolean(Session["ISEDITING"]))
        {
            settings.Columns.Add(x => { x.FieldName = "OrderNo"; x.Caption = "Order no"; x.ReadOnly = true; x.EditFormSettings.Visible = DefaultBoolean.False; });
        }
        settings.Columns.Add(x => { x.FieldName = "CustRef"; x.Caption = "Custromer Reference"; x.ReadOnly = false; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.True; });
        settings.Columns.Add(x => { x.FieldName = "DelDesc"; x.Caption = "Description"; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.True; });
        settings.Columns.Add(x => { x.FieldName = "DelAddress1"; x.Caption = "Address1"; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.True; });
        settings.Columns.Add(x => { x.FieldName = "DelAddress2"; x.Caption = "Address2"; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.True; });
        //settings.Columns.Add(x => { x.FieldName = "DelAddress3"; x.Caption = "Address3"; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.True; });
        settings.Columns.Add(x => { x.FieldName = "DelTown"; x.Caption = "Town"; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.True; });
        settings.Columns.Add(x => { x.FieldName = "DelCity"; x.Caption = "City"; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.True; });
        settings.Columns.Add(x => { x.FieldName = "DelPostCode"; x.Caption = "Post code"; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.True; });
        settings.Columns.Add(x => { x.FieldName = "DelCountry"; x.Caption = "Country code"; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.True; });
        settings.Columns.Add(x => { x.FieldName = "Comments"; x.Caption = "Comments"; x.ReadOnly = true; x.Visible = true; });
        //settings.Columns.Add(x=>{ x.FieldName = "SizeID"; x.Caption = "Size"; x.ReadOnly = true; x.Visible = false; });
        //settings.Columns.Add(x=>{ x.FieldName = "Price"; x.Caption = "Price"; x.ReadOnly = true; x.Visible = false; });
        //settings.Columns.Add(x => { x.FieldName = "OrdQty"; x.Caption = "OrdQty"; x.ReadOnly = true; x.Visible = false; });

    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()



@if (ViewData["headerCount"] != null)
{
    if (Convert.ToInt32(ViewData["headerCount"]) > 0)
    {
        <input type="hidden" id="HEADERVALUENOTZERO" value="HEADERVALUENOTZERO" />
    }
}

