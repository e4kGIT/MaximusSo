@model IEnumerable<Maximus.Data.Models.EmployeeViewModel>
@{
    Maximus.Data.Interface.Concrete.IUnitOfWork _unitOfWork = new Maximus.Data.InterFace.UnitOfWork();
    Maximus.Controllers.EmployeeController Emp = new Maximus.Controllers.EmployeeController(_unitOfWork);
}
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "EmployeeGridViewPrivate";
        settings.CallbackRouteValues = new { Controller = "Private", Action = "EmployeeGridViewPrivate" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Employee", Action = "EmployeeGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Employee", Action = "EmployeeGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Employee", Action = "EmployeeGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        //settings.CommandColumn.Visible = true;
        //settings.CommandColumn.ShowNewButton = true;
        //// settings.CommandColumn.ShowDeleteButton = true;
        //settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "EmployeeId";

        //settings.SettingsCommandButton.EditButton.Image.IconID = IconID.EditEdit16x16;
        //settings.SettingsCommandButton.EditButton.RenderMode = GridCommandButtonRenderMode.Image;

        //settings.SettingsCommandButton.NewButton.Image.IconID = IconID.ActionsAdd16x16;
        //settings.SettingsCommandButton.NewButton.RenderMode = GridCommandButtonRenderMode.Image;

        //settings.SettingsCommandButton.CancelButton.Image.IconID = IconID.ActionsCancel16x16;
        //settings.SettingsCommandButton.CancelButton.RenderMode = GridCommandButtonRenderMode.Image;

        //settings.SettingsCommandButton.UpdateButton.Image.IconID = IconID.OtherUpdatetable16x16gray;
        //settings.SettingsCommandButton.UpdateButton.RenderMode = GridCommandButtonRenderMode.Image;

        settings.SettingsPager.Visible = true;
        // settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;
         
        settings.Columns.Add("EmployeeId");
       
            settings.Columns.Add("EmpFirstName").Caption = "Firstname";
            settings.Columns.Add("EmpLastName").Caption = "Lastname";
        
         
        settings.Columns.Add(col =>
        {
            //Maximus.Data.Models.e4kmaximusdbEntities enty = new Maximus.Data.Models.e4kmaximusdbEntities();
            col.FieldName = "LastOrderDate1";
            col.Caption = "Last order date";

            ////col.SetDataItemTemplateContent(x =>
            ////{
            ////    //empRollout
            ////    string empId = DataBinder.Eval(x.DataItem, "EmployeeId").ToString();
            ////    string busID = Session["BuisnessId"].ToString();
            ////    string nextDate = Emp._empRollout.Exists(s => s.BusinessID == busID && s.EmployeeID == empId) ? Emp._empRollout.GetAll(s => s.BusinessID == busID && s.EmployeeID == empId).First().LastOrder.Value.ToString("dd-MM-yyyy") : "";
            ////    ViewContext.Writer.Write(nextDate);
            ////});
        });
        settings.Columns.Add(col =>
        {
            //Maximus.Data.Models.e4kmaximusdbEntities enty = new Maximus.Data.Models.e4kmaximusdbEntities();
            col.FieldName = "NextOrderDate";
            col.Caption = "Next order date";

            //col.SetDataItemTemplateContent(x =>
            //{
            //    //empRollout
            //    string empId = DataBinder.Eval(x.DataItem, "EmployeeId").ToString();
            //    string busID = Session["BuisnessId"].ToString();
            //    string nextDate = Emp._empRollout.Exists(s => s.BusinessID == busID && s.EmployeeID == empId) ? Emp._empRollout.GetAll(s => s.BusinessID == busID && s.EmployeeID == empId).First().NextOrder.Value.ToString("dd-MM-yyyy") : "";
            //    ViewContext.Writer.Write(nextDate);
            //});
        });
        settings.Columns.Add(col =>
        {

            col.Caption = " ";
            
            if (((List<string>)Session["Templates"]).Count > 0)
            {
                col.SetDataItemTemplateContent(x =>
                {
                    string EmployeeName = (DataBinder.Eval(x.DataItem, "EmpFirstName")).ToString();

                    string EmployeeId = (DataBinder.Eval(x.DataItem, "EmployeeId")).ToString();
                    string Content = Convert.ToBoolean(Session["OnStop"].ToString()) ? string.Format("<button style='background-color:#009885;' disabled onclick=\"CreateTemplateOrder('{0}','{1}','{2}')\" class=\"btn btn-primary\">Create Order</button>", EmployeeId, "CmbUcode_" + EmployeeId, EmployeeName) : string.Format("<button style='background-color:#009885;' onclick=\"CreateTemplateOrder('{0}','{1}','{2}')\" class=\"btn btn-primary\">Create Order</button>", EmployeeId, "CmbUcode_" + EmployeeId, EmployeeName);
                    ViewContext.Writer.Write(Content);
                });
            }
            else
            {
                col.SetDataItemTemplateContent(x =>
                {

                    bool empActive = (bool)(DataBinder.Eval(x.DataItem, "EmpIsActive"));
                    bool userActive = (bool)(DataBinder.Eval(x.DataItem, "UserActive"));
                    string Content = "";
                    if (empActive && userActive)
                    {
                        string UcodesName = (DataBinder.Eval(x.DataItem, "EmpUcodes")).ToString();
                        string EmployeeName = (DataBinder.Eval(x.DataItem, "EmpFirstName")).ToString() + " " + (DataBinder.Eval(x.DataItem, "EmpLastName")).ToString();
                        string EmployeeId = (DataBinder.Eval(x.DataItem, "EmployeeId")).ToString();
                        Content = Convert.ToBoolean(Session["OnStop"].ToString()) ? string.Format("<button style='background-color:#009885;' disabled onclick=\"CreateOrder('{0}','{1}','{2}')\" class=\"btn btn-primary\">Create Order</button>", EmployeeId, "CmbUcode_" + EmployeeId+"_" + UcodesName, EmployeeName) : string.Format("<button style='background-color:#009885;' onclick=\"CreateOrder('{0}','{1}','{2}')\" class=\"btn btn-primary\">Create Order</button>", EmployeeId, "CmbUcode_" + EmployeeId + "_" + UcodesName, EmployeeName);
                    }
                    ViewContext.Writer.Write(Content);
                });
            }
        });

    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()

