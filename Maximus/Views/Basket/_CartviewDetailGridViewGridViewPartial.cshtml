@model IEnumerable<Maximus.Data.Models.SalesOrderLineViewModel>
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "CartviewDetailGridView";
        settings.CallbackRouteValues = new { Controller = "Basket", Action = "CartviewDetailGridViewGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Basket", Action = "CartviewDetailGridViewGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Basket", Action = "CartviewDetailGridViewGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Basket", Action = "CartviewDetailGridViewGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsBehavior.ConfirmDelete = true;
        // settings.StylesEditors.TextBox.CssClass = "textBoxStyle";
        //settings.ClientSideEvents.RowDblClick = "function(s, e) {s.StartEditRow(e.visibleIndex);}";
        settings.ClientSideEvents.RowDblClick = "function(s, e) {s.StartEditRow(e.visibleIndex);}";
        if (Convert.ToBoolean(Session["POINTSREQ"].ToString()))
        {
            if (Session["Pointsmodel"] != null)
            {
                settings.ClientSideEvents.EndCallback = "PointsEndCallBack";
            }
        }
        //settings.ClientSideEvents.EndCallback = "OnEndCallback";
        //settings.ClientSideEvents.BeginCallback = "OnBeginCallback";
        settings.CommandColumn.Visible = true;
        ////settings.CommandColumn.ShowNewButton = true;
        //settings.CommandColumn.ShowDeleteButton = true;
        //settings.CommandColumn.ShowEditButton = true;
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.KeyFieldName = "LineNo";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;
        settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;
        settings.CommandColumn.Visible = true;
        settings.SettingsDetail.ShowDetailRow = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.CommandButtonInitialize = (sender, e) =>
        {
            MVCxGridView cv = sender as MVCxGridView;
            if (e.VisibleIndex > 0)
            {
                bool value = (bool)cv.GetRowValues(e.VisibleIndex, "Assembly");
                bool? chagable = (bool?)cv.GetRowValues(e.VisibleIndex, "Ischargable");

                if (value == true & chagable != false)
                {
                    if (e.ButtonType == ColumnCommandButtonType.Edit | e.ButtonType == ColumnCommandButtonType.Delete | e.ButtonType == ColumnCommandButtonType.Cancel | e.ButtonType == ColumnCommandButtonType.Update)
                        e.Visible = false;
                }
                if (chagable == false)
                {
                    if (e.ButtonType == ColumnCommandButtonType.Edit)
                        e.Visible = false;

                }
            }
        };
        settings.PreRender = (sender, e) =>
        {
            string filterExpressionSTR = "";
            string filterExpression = "";
            MVCxGridView cv = sender as MVCxGridView;
            for (int i = 0; i < cv.VisibleRowCount; i++)
            {
                string StyleID = (string)cv.GetRowValues(i, "StyleID");
                bool Assembly = (bool)cv.GetRowValues(i, "Assembly");
                if (Assembly)
                {

                    filterExpressionSTR = filterExpressionSTR + "'" + StyleID + "',";
                }
            }
            if (filterExpressionSTR.Contains(','))
            {
                filterExpressionSTR = filterExpressionSTR.TrimEnd(',');
                filterExpression = "NOT [StyleID] IN (" + filterExpressionSTR + ")";
                cv.FilterExpression = filterExpression;
            }
        };
        settings.SetDetailRowTemplateContent(x =>
        {
            try
            {
                @Html.RenderAction("CardDetailAssembly", new { LineNo = x.KeyValue });
            }
            catch (Exception e)
            {

            }

        });
        settings.SettingsCommandButton.EditButton.Image.IconID = IconID.EditEdit16x16;
        settings.SettingsCommandButton.EditButton.RenderMode = GridCommandButtonRenderMode.Image;

        settings.SettingsCommandButton.DeleteButton.Image.IconID = IconID.EditDelete16x16;
        settings.SettingsCommandButton.DeleteButton.RenderMode = GridCommandButtonRenderMode.Image;

        settings.SettingsCommandButton.CancelButton.Image.IconID = IconID.ActionsCancel16x16;
        settings.SettingsCommandButton.CancelButton.RenderMode = GridCommandButtonRenderMode.Image;

        settings.SettingsCommandButton.UpdateButton.Image.IconID = IconID.OtherUpdatetable16x16gray;
        settings.SettingsCommandButton.UpdateButton.RenderMode = GridCommandButtonRenderMode.Image;


        //settings.Columns.Add(x => { x.FieldName = "LineNo"; x.Caption = "Line no"; x.ReadOnly = true; x.Visible=false; x.EditFormSettings.Visible = DefaultBoolean.False;
        //    x.SetEditItemTemplateContent(c =>
        //    {
        //        GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

        //        Html.DevExpress().Label(lblsettings =>
        //        {
        //            lblsettings.Name = "LineNo";
        //            //lblsettings.ControlStyle.CssClass = "align-middle";
        //            //lblsettings.ClientVisible = visible;
        //        }).Bind(templateContainer.Text).Render();

        //    });


        //});

        settings.Columns.Add(x =>
        {
            x.FieldName = "StyleImage"; x.Caption = " "; x.ReadOnly = true; x.EditFormSettings.Visible = DefaultBoolean.False;
            x.Settings.AllowAutoFilter = DefaultBoolean.False;
            x.SetDataItemTemplateContent(s =>
            {
                var styleimg = DataBinder.Eval(s.DataItem, "StyleImage");
                //ViewContext.Writer.Write(string.Format("<img src=\"{0}\" height=\"30\" width=\"35\" />", styleimg));
                Html.DevExpress().ImageZoom(zoom =>
                {
                    zoom.Name = "StyleImage" + Guid.NewGuid().ToString();
                    zoom.ImageUrl = styleimg.ToString();
                    zoom.Height = System.Web.UI.WebControls.Unit.Pixel(30);
                    zoom.Width = System.Web.UI.WebControls.Unit.Pixel(35);
                    zoom.LargeImageUrl = styleimg.ToString();
                    zoom.EnableExpandMode = true;
                    zoom.SettingsZoomMode.ZoomWindowHeight = System.Web.UI.WebControls.Unit.Pixel(600);
                    zoom.SettingsZoomMode.ZoomWindowWidth = System.Web.UI.WebControls.Unit.Pixel(700);
                    //zoom.ShowHint = Model.ShowHint;
                    //zoom.LargeImageLoadMode = Model.LargeImageLoadMode;
                    zoom.SettingsZoomMode.ZoomWindowPosition = ZoomWindowPosition.Right;
                    zoom.SettingsZoomMode.MouseBoxOpacityMode = MouseBoxOpacityMode.Inside;
                }).GetHtml();
            });
            x.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;


                Html.DevExpress().Image(lblsettings =>
                {
                    lblsettings.Name = "StyleImage";
                    lblsettings.Height = System.Web.UI.WebControls.Unit.Pixel(30);
                    lblsettings.Width = System.Web.UI.WebControls.Unit.Pixel(35);
                    //lblsettings.ControlStyle.CssClass = "align-middle";
                    //lblsettings.ClientVisible = visible;
                }).Bind(templateContainer.Text).Render();

            });
        });

        settings.Columns.Add(x =>
        {
            x.FieldName = "EmployeeID"; x.Caption = "Employee Id"; x.ReadOnly = true; x.Visible = false; x.EditFormSettings.Visible = DefaultBoolean.False; x.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                Html.DevExpress().Label(lblsettings =>
                {
                    lblsettings.Name = "EmployeeID";
                    //lblsettings.ControlStyle.CssClass = "align-middle";
                    //lblsettings.ClientVisible = visible;
                }).Bind(templateContainer.Text).Render();

            });
        });
        settings.Columns.Add(x =>
        {
            x.FieldName = "StyleID"; x.Caption = "Style"; x.ReadOnly = true; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.False;
            x.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                Html.DevExpress().Label(lblsettings =>
                {
                    lblsettings.Name = "StyleID";
                    //lblsettings.ControlStyle.CssClass = "align-middle";
                    //lblsettings.ClientVisible = visible;
                }).Bind(templateContainer.Text).Render();

            });
        });
        settings.Columns.Add(x =>
        {
            x.FieldName = "Description"; x.Caption = "Description"; x.ReadOnly = true; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.False; x.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                Html.DevExpress().Label(lblsettings =>
                {
                    lblsettings.Name = "Description";
                    //lblsettings.ControlStyle.CssClass = "align-middle";
                    //lblsettings.ClientVisible = visible;
                }).Bind(templateContainer.Text).Render();

            });
        });
        settings.Columns.Add(x =>
        {
            x.FieldName = "ColourID"; x.Caption = "Colour"; x.ReadOnly = true; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.False; x.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                Html.DevExpress().Label(lblsettings =>
                {
                    lblsettings.Name = "ColourID";
                    //lblsettings.ControlStyle.CssClass = "align-middle";
                    //lblsettings.ClientVisible = visible;
                }).Bind(templateContainer.Text).Render();

            });
        });
        settings.Columns.Add(x =>
        {
            x.FieldName = "SizeID"; x.Caption = "Size"; x.ReadOnly = true; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.False; x.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                Html.DevExpress().Label(lblsettings =>
                {
                    lblsettings.Name = "SizeID";
                    //lblsettings.ControlStyle.CssClass = "align-middle";
                    //lblsettings.ClientVisible = visible;
                }).Bind(templateContainer.Text).Render();

            });
        });
        settings.Columns.Add(x =>
        {
            x.SetDataItemTemplateContent(c =>
            {
                string data = Convert.ToString((DataBinder.Eval(c.DataItem, "FreeText1")));
                ViewContext.Writer.Write(data);
            });
            x.FieldName = "FreeText1"; x.Caption = "Require Data"; x.ReadOnly = false; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.True;
            x.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;
                string value = DataBinder.Eval(c.DataItem, "FreeText1") == null ? "" : (DataBinder.Eval(c.DataItem, "FreeText1")).ToString();
                if (value == "")
                {

                    Html.DevExpress().Label(lblsettings =>
                    {
                        lblsettings.Name = "FreeText1";
                        lblsettings.Text = "-";
                        //lblsettings.ControlStyle.CssClass = "align-middle";
                        //lblsettings.ClientVisible = visible;
                    }).Bind("").Render();
                }
                else
                {
                    Html.DevExpress().TextBox(lblsettings =>
                    {
                        lblsettings.Name = "FreeText1";
                        //lblsettings.ControlStyle.CssClass = "align-middle";
                        //lblsettings.ClientVisible = visible;
                    }).Bind(templateContainer.Text).Render();
                }
            });
        });

        if (Session["OVERRIDE_ENT_WITH_REASON"].ToString().ToLower() == "show")
        {

            settings.Columns.Add(x =>
            {
                x.SetDataItemTemplateContent(c =>
                {
                    string data = Convert.ToString((DataBinder.Eval(c.DataItem, "SOPDetail4")));
                    ViewContext.Writer.Write(data);
                });
                x.FieldName = "SOPDetail4"; x.Caption = "Exceed reason"; x.ReadOnly = true; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.False; x.SetEditItemTemplateContent(c =>
                {
                    GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;
                    string data = Convert.ToString((DataBinder.Eval(c.DataItem, "SOPDetail4")));
                    Html.DevExpress().Label(lblsettings =>
                    {
                        lblsettings.Name = "SOPDetail4";
                        //lblsettings.ControlStyle.CssClass = "align-middle";
                        //lblsettings.ClientVisible = visible;
                    }).Bind(data).Render();

                });
            });
        }
        if (Session["costCenter"] != null)
        {



            //settings.Columns.Add(x =>
            //{
            //    x.FieldName = "OrdQty"; x.Caption = "OrdQty"; x.Visible = true;
            //    x.EditFormSettings.Visible = DefaultBoolean.True;
            //    x.SetEditItemTemplateContent(c =>
            //    {
            //        GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;
            //        bool value = (bool)(DataBinder.Eval(c.DataItem, "Assembly"));
            //        var value1 = (DataBinder.Eval(c.DataItem, "LineNo"));
            //        if (value)
            //        {
            //            Html.DevExpress().Label(lblsettings =>
            //            {
            //                lblsettings.Name = "OrdQty";
            //            }).Bind(templateContainer.Text).Render();
            //        }
            //        else
            //        {
            //            Html.DevExpress().TextBox(lblsettings =>
            //            {
            //                lblsettings.Name = "OrdQty";
            //            }).Bind(templateContainer.Text).Render();
            //        }
            //    });
            //});

            settings.Columns.Add(x =>
            {
                x.FieldName = "SOPDetail5"; x.Caption = "Site Code"; x.Visible = true; x.ReadOnly = true;
                x.EditFormSettings.Visible = DefaultBoolean.True; x.SetDataItemTemplateContent(c =>
                {
                    string data = Convert.ToString((DataBinder.Eval(c.DataItem, "SOPDetail5")));
                    ViewContext.Writer.Write(data);
                });
                x.SetEditItemTemplateContent(c =>
                {
                    GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;
                    string data = Convert.ToString((DataBinder.Eval(c.DataItem, "SOPDetail5")));

                    if (((List<Maximus.Data.models.tblsop_customerorder_template_costcentre>)Session["costCenter"]).Count > 0)
                    {
                        Html.DevExpress().ComboBox(xa =>
                        {
                            xa.Name = "SiteCodeCmbgroupedProducts";
                            xa.Properties.ClientSideEvents.SelectedIndexChanged = "SetSopDetail5";
                            if (((List<Maximus.Data.models.tblsop_customerorder_template_costcentre>)Session["costCenter"]).Count > 1)
                            {
                                foreach (var dat in (List<Maximus.Data.models.tblsop_customerorder_template_costcentre>)Session["costCenter"])
                                {
                                    xa.Properties.Items.Add(dat.ProjectCode + " | " + dat.SiteName);
                                }
                            }
                            else
                            {
                                xa.SelectedIndex = 0;
                                xa.Properties.Items.Add(((List<Maximus.Data.models.tblsop_customerorder_template_costcentre>)Session["costCenter"])[0].ProjectCode + " | " + ((List<Maximus.Data.models.tblsop_customerorder_template_costcentre>)Session["costCenter"])[0].SiteName);
                            }
                        }).Bind(templateContainer.Text).Render();
                    }
                });
            });
        }
        if (Convert.ToBoolean(Session["POINTSREQ"]))
        {
            if (((Maximus.Data.models.PointsModel)Session["Pointsmodel"]).LstStyles != null)
            {
                settings.Columns.Add(x =>
                {
                    x.FieldName = "Points"; x.Caption = "Points"; x.Visible = true;
                    x.EditFormSettings.Visible = DefaultBoolean.True;
                    x.SetEditItemTemplateContent(c =>
                    {
                        GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                        Html.DevExpress().Label(lblsettings =>
                        {
                            lblsettings.Name = "Points";
                        }).Bind(templateContainer.Text).Render();

                    });
                });
            }
        }

        settings.Columns.Add(x =>
        {
            x.FieldName = "Price"; x.Caption = "Price";x.Width=System.Web.UI.WebControls.Unit.Pixel(200) ; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.False; x.SetDataItemTemplateContent(c =>
            {
                if (Session["Price"].ToString().ToLower() != "hide")
                {
                    string data = Convert.ToString((DataBinder.Eval(c.DataItem, "Price")));
                    data = data.ToString();
                    ViewContext.Writer.Write(data);
                }
                else
                {
                    ViewContext.Writer.Write("N/A");
                }

            });

            if (Session["Price"].ToString().ToLower() != "hide" && Session["Price"].ToString().ToLower() != "readwrite")
            {
                var s = Session["Price"].ToString();
                x.SetEditItemTemplateContent(c =>
                {
                    GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;
                    templateContainer.Column.Width = System.Web.UI.WebControls.Unit.Pixel(200);
                    Html.DevExpress().Label(lblsettings =>
                    {
                        lblsettings.Name = "Price";
                    }).Bind(templateContainer.Text).Render();
                });
                x.ReadOnly = true;
            }
            else if (Session["Price"].ToString().ToLower() == "hide")
            {
                x.SetEditItemTemplateContent(c =>
                {
                    GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;
                    templateContainer.Column.Width = System.Web.UI.WebControls.Unit.Pixel(200);
                    Html.DevExpress().Label(lblsettings =>
                    {
                        lblsettings.Name = "Price";
                        lblsettings.Text = "N/A";
                    }).Bind("N/A").Render();
                });
                x.ReadOnly = true;
            }
            else
            {
                x.SetEditItemTemplateContent(c =>
                {
                    GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;
                    templateContainer.Column.Width = System.Web.UI.WebControls.Unit.Pixel(200);
                    Html.DevExpress().TextBox(tbsettings =>
                    {
                        tbsettings.Name = "Price";
                        tbsettings.Width = System.Web.UI.WebControls.Unit.Pixel(200);
                    }).Bind(templateContainer.Text).Render();
                });
            }

        });

        settings.Columns.Add(x =>
        {
            x.FieldName = "OrdQty"; x.Caption = "OrdQty"; x.Visible = true;
            x.EditFormSettings.Visible = DefaultBoolean.True;
            x.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;
                bool value = (bool)(DataBinder.Eval(c.DataItem, "Assembly"));
                var value1 = (DataBinder.Eval(c.DataItem, "LineNo"));
                if (value)
                {
                    Html.DevExpress().Label(lblsettings =>
                    {
                        lblsettings.Name = "OrdQty";
                    }).Bind(templateContainer.Text).Render();
                }
                else
                {
                    Html.DevExpress().TextBox(lblsettings =>
                    {
                        lblsettings.Name = "OrdQty";
                    }).Bind(templateContainer.Text).Render();
                }
            });
        });
        settings.Columns.Add(x =>
        {
            x.FieldName = "VAT";
            x.Caption = "VAT"; x.Visible = true;
            x.EditFormSettings.Visible = DefaultBoolean.True;
            x.FieldName = "VAT"; x.Caption = "VAT"; x.ReadOnly = true; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.False; x.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                Html.DevExpress().Label(lblsettings =>
                {
                    lblsettings.Name = "VAT";
                }).Bind(templateContainer.Text).Render();

            });
        });


        settings.Columns.Add(x =>
        {
            x.FieldName = "Total";
            x.Caption = "Total"; x.Visible = true;
            x.EditFormSettings.Visible = DefaultBoolean.True;
            x.FieldName = "Total"; x.Caption = "Total"; x.ReadOnly = true; x.Visible = true; x.EditFormSettings.Visible = DefaultBoolean.False; x.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                Html.DevExpress().Label(lblsettings =>
                {
                    lblsettings.Name = "Total";
                    //lblsettings.ControlStyle.CssClass = "align-middle";
                    //lblsettings.ClientVisible = visible;
                }).Bind(templateContainer.Text).Render();

            });
            //x.SetDataItemTemplateContent(c =>
            //{
            //    double pric = Convert.ToDouble((DataBinder.Eval(c.DataItem, "Price")));
            //    double vatPer = Convert.ToDouble((DataBinder.Eval(c.DataItem, "VatPercent")));
            //    double totWitVat = Convert.ToDouble((pric * vatPer) / 100);
            //    int totQty = Convert.ToInt32(DataBinder.Eval(c.DataItem, "OrdQty"));
            //    double tot =( pric* totQty) + (totWitVat* totQty);
            //    ViewContext.Writer.Write(tot);
            //});
            //x.SetEditItemTemplateContent(c =>
            //{
            //    GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;
            //    double pric = Convert.ToDouble((DataBinder.Eval(c.DataItem, "Price")));
            //    double vatPer = Convert.ToDouble((DataBinder.Eval(c.DataItem, "VatPercent")));
            //    double totWitVat = Convert.ToDouble((pric * vatPer) / 100);
            //    int totQty = Convert.ToInt32(DataBinder.Eval(c.DataItem, "OrdQty"));
            //    double tot = (pric * totQty) + (totWitVat * totQty);
            //    Html.DevExpress().Label(lblsettings =>
            //    {
            //        lblsettings.Name = "Total";
            //        //lblsettings.ControlStyle.CssClass = "align-middle";
            //        //lblsettings.ClientVisible = visible;
            //    }).Bind(tot).Render();
            //});
        });
        if (Convert.ToBoolean(Session["POINTSREQ"]))
        {
            if (((Maximus.Data.models.PointsModel)Session["Pointsmodel"]).LstStyles != null)
            {
                settings.Columns.Add(x =>
                {
                    x.FieldName = "TotalPoints"; x.Caption = "TotalPoints"; x.Visible = true;
                    x.EditFormSettings.Visible = DefaultBoolean.True;
                    x.SetEditItemTemplateContent(c =>
                    {
                        GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;
                        int thispt = Convert.ToInt32(DataBinder.Eval(c.DataItem, "Points"));
                        int ordQty =Convert.ToInt32(DataBinder.Eval(c.DataItem, "OrdQty"));
                        int totalPoints = thispt * ordQty;
                        Html.DevExpress().Label(lblsettings =>
                        {
                            lblsettings.Name = "TotalPoints";
                        }).Bind(totalPoints).Render();

                    });
                });
            }
        }


    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()

