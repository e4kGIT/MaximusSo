
@{
    var cardView = Html.DevExpress().CardView(settings =>
    {
        #region settings
        settings.Name = "CardView";
        settings.CallbackRouteValues = new { Controller = "Home", Action = "CardViewPartial" };
        settings.SettingsPager.SettingsTableLayout.ColumnCount = 2;
        settings.SettingsEditing.AddNewCardRouteValues = new { Controller = "Home", Action = "CardViewPartialAddNew" };
        settings.SettingsEditing.UpdateCardRouteValues = new { Controller = "Home", Action = "CardViewPartialUpdate" };
        settings.SettingsEditing.DeleteCardRouteValues = new { Controller = "Home", Action = "CardViewPartialDelete" };
        settings.SettingsEditing.Mode = CardViewEditingMode.PopupEditForm;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsPager.SettingsTableLayout.ColumnCount = 2;
        settings.SettingsPager.SettingsTableLayout.RowsPerPage = 10;
        settings.SettingsPopup.EditForm.Width = 600;
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.SettingsEditing.Mode = CardViewEditingMode.EditForm;

        settings.SettingsBehavior.ConfirmDelete = true;
        settings.KeyFieldName = "StyleID";
        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowHeaderPanel = false;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.Settings.EnableFilterControlPopupMenuScrolling = false;
        settings.SettingsBehavior.AllowSelectByCardClick = true;
        settings.Settings.ShowHeaderPanel = true;
        settings.ClientSideEvents.BeginCallback = "BeginCallback";
        settings.CardLayoutCreated = (sender, e) =>
        {
            MVCxCardView cv = sender as MVCxCardView;
            if (ViewBag.page)
            {

                cv.PageIndex = 0;
            }
            if (e.VisibleIndex >= 0)
            {
                bool? value = (bool?)cv.GetCardValues(e.VisibleIndex, "isAllocated");

                if (value != null)
                {
                    if (value.Value)
                    {

                        e.Properties.Items[1].ParentContainerStyle.CssClass = "itemToHide";
                        e.Properties.Items[6].ParentContainerStyle.CssClass = "itemToHide";
                        e.Properties.Items[3].ParentContainerStyle.CssClass = "itemToHide";
                        e.Properties.Items[4].ParentContainerStyle.CssClass = "itemToHide";
                        e.Properties.Items[5].ParentContainerStyle.CssClass = "itemToHide";

                    }
                    else
                    {
                        e.Properties.Items[2].ParentContainerStyle.CssClass = "itemToHide";
                    }
                }
                else
                {
                    e.Properties.Items[2].ParentContainerStyle.CssClass = "itemToHide";
                }

            }

        };
        settings.HtmlCardPrepared = (sender, e) =>
        {
            if (ViewBag.page)
            {
                MVCxCardView cv = sender as MVCxCardView;
                cv.PageIndex = 0;
            }
        };
        Maximus.Models.e4kmaximusdbEntities entity = new Maximus.Models.e4kmaximusdbEntities();
        settings.SetHeaderPanelTemplateContent(r =>
        {

            ViewContext.Writer.Write(string.Format("<span title='filter' class=\"glyphicon glyphicon-filter\" onclick='GetFilter();'></span><span class='glyphicon glyphicon-remove pull-right' title='remove filter' onclick='RemoveFilter()'></span>"));

        });
        #endregion

        #region cardview Column defenitions
        settings.Columns.Add("StyleID");
        settings.Columns.Add("ColourId");
        settings.Columns.Add("SizeId");
        settings.Columns.Add("Description");
        settings.Columns.Add("Price");

        settings.Columns.Add(c =>
        {
            c.FieldName = "StyleImage";
        });
        settings.Columns.Add("Dimensions");
        //settings.Columns.Add("Assembly");
        #endregion

        #region cardviewlayoutproperties defenition
        settings.CardLayoutProperties.ColCount = 2;
        settings.CardLayoutProperties.Items.Add(i =>
        {
            i.ColumnName = "StyleImage";
            i.ShowCaption = DefaultBoolean.False;
            i.RowSpan = 6;
            i.VerticalAlign = FormLayoutVerticalAlign.Middle;
            i.SetTemplateContent(x =>
            {

                var Assembly = Convert.ToInt16(DataBinder.Eval(x.DataItem, "Assembly"));
                var style = DataBinder.Eval(x.DataItem, "StyleID");
                var styleimg = DataBinder.Eval(x.DataItem, "StyleImage");
                ViewContext.Writer.Write(string.Format("<br/><br/><img src=\"{0}\" height='150' width='150' onclick='Getimage(\"{0}\")' /> <br/><br/>", styleimg));
                string popname = string.Format("{0}_{1}", "pop", style);
                if (Assembly != 0)
                {

                    ViewContext.Writer.Write(string.Format("<center><br/><br/><br/><img src='/Content/Images/embroidery.png' title='Get Assembly info' height='40' width='30' onclick=\"getAssembly('{0}');\"/></center>", style));
                }
            });

        });
        settings.CardLayoutProperties.Items.Add(x =>
        {
            x.ColumnName = "StyleID";
            x.Caption = "Style";
            x.SetTemplateContent(col =>
            {
                var style = (DataBinder.Eval(col.DataItem, "StyleID")).ToString();
                if (style.Contains(','))
                {
                    Html.DevExpress().ComboBox(
                        c =>
                        {
                            var styleArr = style.Split(',');
                            c.Name = style;
                            foreach (string data in (string[])styleArr)
                            {
                                c.Properties.Items.Add(data);

                            }
                            c.SelectedIndex = 0;
                            c.Properties.ClientSideEvents.SelectedIndexChanged = "GetDrpResultModel";
                        }
                                        ).Render();
                }
                else
                {
                    ViewContext.Writer.Write(style);
                }
            });


        });
        settings.CardLayoutProperties.Items.Add(x =>
        {
            x.ColumnName = "Dimensions";
            x.Caption = " ";
            x.SetTemplateContent(col =>
            {
                var freeText = (DataBinder.Eval(col.DataItem, "Dimensions")).ToString();
                var content = string.Format("<a onclick='getDimAlloc(\"{0}\");'>Click here to see Products</a>",freeText);
                if (freeText != "")
                {
                    ViewContext.Writer.Write(string.Format("<center>{0}</center>", content));
                }
            });
        });
        settings.CardLayoutProperties.Items.Add(x =>
        {
            x.ColumnName = "Description";
            x.SetTemplateContent(col =>
            {
                var style = (DataBinder.Eval(col.DataItem, "StyleID")).ToString();

                if (style.Contains(','))
                {
                    var styleArr = style.Split(',');
                    var style1 = styleArr[0];
                    ViewContext.Writer.Write(string.Format("<div id='LbDescription" + style1 + "'>{0}</div>", entity.tblfsk_style.Where(s => s.StyleID == style1).FirstOrDefault().Description));
                }
                else
                {
                    ViewContext.Writer.Write(string.Format("<div id='LbDescription" + style + "'>{0}</div>", entity.tblfsk_style.Where(s => s.StyleID == style).FirstOrDefault().Description != null ? entity.tblfsk_style.Where(s => s.StyleID == style).FirstOrDefault().Description.ToString() : ""));
                }
            });
        });
        settings.CardLayoutProperties.Items.Add(x =>
        {
            x.ColumnName = "ColourId";
            x.Caption = "Colour";
            x.SetTemplateContent(col =>
            {
                var style = (DataBinder.Eval(col.DataItem, "StyleID")).ToString();

                if (style.Contains(','))
                {
                    Html.DevExpress().ComboBox(
                        c =>
                        {
                            var styleArr = style.Split(',');
                            string style1 = styleArr[0].ToString();
                            c.Name = "Color_" + "Drop_" + style;
                            List<string> colorIdLst = (List<string>)entity.tblfsk_style_colour_size.Where(s => s.StyleID == style1).Select(s => s.ColourID).Distinct().ToList();
                            foreach (string data in colorIdLst)
                            {
                                c.Properties.Items.Add(data);
                            }
                            if (colorIdLst.Count() == 1)
                            { c.SelectedIndex = 0; }
                            c.Properties.ClientSideEvents.SelectedIndexChanged = "getSelectedColor";
                        }
                                        ).Render();
                }
                else
                {
                    Html.DevExpress().ComboBox(
                        c =>
                        {
                            c.Name = "Color_" + "Drop_" + style;
                            List<string> colorIdLst = (List<string>)entity.tblfsk_style_colour_size.Where(s => s.StyleID == style).OrderBy(s=>s.ColourID).Select(s => s.ColourID).Distinct().ToList();
                            foreach (string data in colorIdLst)
                            {
                                c.Properties.Items.Add(data);

                            }
                            if(colorIdLst.Count()==1)
                            { c.SelectedIndex = 0; }
                            c.Properties.ClientSideEvents.SelectedIndexChanged = "getSelectedColor";
                        }
                                        ).Render();
                }
            });

        });
        settings.CardLayoutProperties.Items.Add(x =>
        {
            x.ColumnName = "SizeId";
            x.Caption = "Size";
            x.SetTemplateContent(col =>
            {
                var style = (DataBinder.Eval(col.DataItem, "StyleID")).ToString();

                if (style.Contains(','))
                {
                    Html.DevExpress().ComboBox(
                        c =>
                        {
                            var styleArr = style.Split(',');
                            string style1 = styleArr[0].ToString();
                            c.Name = "Size_" + "Drop_"+style;
                            List<string> sizeIdLst = (List<string>)entity.tblfsk_style_sizes.Where(s => s.StyleID == style1).Distinct().OrderBy(s => s.SeqNo).Select(s => s.SizeID).ToList();
                            foreach (string data in sizeIdLst)
                            {
                                c.Properties.Items.Add(data);
                            }
                            if (sizeIdLst.Count == 1)
                            {
                                c.SelectedIndex = 0;
                            }
                            c.Properties.ClientSideEvents.SelectedIndexChanged = "getSelectedSize";
                        }
                                        ).Render();
                }
                else
                {
                    Html.DevExpress().ComboBox(
                        c =>
                        {
                            c.Name = "Size_" + "Drop_" + style;
                            List<string> sizeIdLst = (List<string>)entity.tblfsk_style_sizes.Where(s => s.StyleID == style).Distinct().OrderBy(s => s.SeqNo).Select(s => s.SizeID).ToList();
                            foreach (string data in sizeIdLst)
                            {
                                c.Properties.Items.Add(data);

                            }
                            if (sizeIdLst.Count == 1)
                            {
                                c.SelectedIndex = 0;
                            }
                            c.Properties.ClientSideEvents.SelectedIndexChanged = "getSelectedSize";
                        }
                                        ).Render();
                }
            });

        });
        settings.CardLayoutProperties.Items.Add(x =>
        {
            x.ColumnName = "Price";
            x.Caption = "Price";
            x.SetTemplateContent(col =>
            {
                var style = (DataBinder.Eval(col.DataItem, "StyleID")).ToString();
                if (style.Contains(','))
                {
                    var styleArr = style.Split(',');
                    string style1 = styleArr[0].ToString();
                    var color = entity.tblfsk_style_colour.Any(s => s.StyleID == style1) == true ? entity.tblfsk_style_colour.Where(s => s.StyleID == style1).OrderBy(s => s.ColourID).FirstOrDefault().ColourID : "";
                    var size = entity.tblfsk_style_sizes.Any(s => s.StyleID == style1) == true ? entity.tblfsk_style_sizes.Where(s => s.StyleID == style1).OrderBy(s => s.SeqNo).Count() == 1 ? entity.tblfsk_style_sizes.Where(s => s.StyleID == style1).OrderBy(s => s.SeqNo).FirstOrDefault().SizeID : "" : "";
                    var price = size == "" ? "" : entity.getstylesviews.Any(s => s.StyleID == style1) == false ? "" : System.Math.Round(entity.getstylesviews.Where(s => s.StyleID == style1 && s.SizeID == size && s.ColourID == color).FirstOrDefault().Price.Value, 2).ToString();
                    ViewContext.Writer.Write(string.Format("<div id='LbPrice"+style+"'>{0}</div>",price));
                }
                else
                {
                    var color = entity.tblfsk_style_colour.Any(s => s.StyleID == style) == true ? entity.tblfsk_style_colour.Where(s => s.StyleID == style).OrderBy(s => s.ColourID).FirstOrDefault().ColourID : "";
                    var size = entity.tblfsk_style_sizes.Any(s => s.StyleID == style) == true ? entity.tblfsk_style_sizes.Where(s => s.StyleID == style).OrderBy(s => s.SeqNo).Count()==1?entity.tblfsk_style_sizes.Where(s => s.StyleID == style).OrderBy(s => s.SeqNo).FirstOrDefault().SizeID:"" : "";
                    var price = size ==""?"":entity.getstylesviews.Any(s => s.StyleID == style) == false ? "" :System.Math.Round( entity.getstylesviews.Where(s => s.StyleID == style && s.SizeID == size && s.ColourID == color).FirstOrDefault().Price.Value,2).ToString();
                    ViewContext.Writer.Write(string.Format("<div id='LbPrice" + style + "'>{0}</div>",  price));
                }
            });


        });

        #endregion

        #region assigning values to the combobox
        #endregion
    });
    if (ViewData["EditError"] != null)
    {
        cardView.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@cardView.Bind(Model).GetHtml()


 