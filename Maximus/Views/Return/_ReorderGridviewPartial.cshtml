@{
    Maximus.Data.Interface.Concrete.IUnitOfWork _unitOfWork = new Maximus.Data.InterFace.UnitOfWork();
    Maximus.Controllers.HomeController home = new Maximus.Controllers.HomeController(_unitOfWork);
    Maximus.Data.Models.DataProcessing hc = new Maximus.Data.Models.DataProcessing(_unitOfWork);
    Maximus.Services.Interface.IDataConnection _dataConnection = new Maximus.Services.DataConnectionService(_unitOfWork);
}
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "ReorderGridview";
        settings.CallbackRouteValues = new { Controller = "Return", Action = "ReorderGridviewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Return", Action = "ReorderGridviewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Return", Action = "ReorderGridviewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Return", Action = "ReorderGridviewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.SettingsCommandButton.EditButton.Image.IconID = IconID.EditEdit16x16;
        settings.SettingsCommandButton.EditButton.RenderMode = GridCommandButtonRenderMode.Image;

        settings.SettingsCommandButton.DeleteButton.Image.IconID = IconID.EditDelete16x16;
        settings.SettingsCommandButton.DeleteButton.RenderMode = GridCommandButtonRenderMode.Image;

        settings.SettingsCommandButton.CancelButton.Image.IconID = IconID.ActionsCancel16x16;
        settings.SettingsCommandButton.CancelButton.RenderMode = GridCommandButtonRenderMode.Image;

        settings.SettingsCommandButton.UpdateButton.Image.IconID = IconID.OtherUpdatetable16x16gray;
        settings.SettingsCommandButton.UpdateButton.RenderMode = GridCommandButtonRenderMode.Image;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        //settings.KeyFieldName = "ReOrderLineNo;LineNo";
        settings.KeyFieldName = "LineNo;ReOrderLineNo";
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowFilterRowMenu = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;
        settings.ClientSideEvents.EndCallback = "CalculateTotals";
        settings.Columns.Add("OrderNo").Visible = false;
        settings.CommandButtonInitialize = (s, e) =>
        {
            MVCxGridView gridView = (MVCxGridView)s;
            var value = Convert.ToBoolean(gridView.GetRowValues(e.VisibleIndex, "IsCnf"));
            if (e.ButtonType == ColumnCommandButtonType.Edit)
            {

                if (value)
                {
                    e.Visible = false;
                }
            }
            if (e.ButtonType == ColumnCommandButtonType.Delete)
            {
                if (value)
                {
                    e.Visible = false;
                }
            }
        };
        if ((bool)Session["ISRTNEDITING"])
        {
            settings.Columns.Add(col =>
            {
                col.FieldName = "ReOrderno"; col.Caption = " "; col.ReadOnly = true; col.EditFormSettings.Visible = DefaultBoolean.False;
                col.Settings.AllowAutoFilter = DefaultBoolean.False;
                col.SetEditItemTemplateContent(c =>
                {
                    GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                    Html.DevExpress().Label(lblsettings =>
                    {
                        lblsettings.Name = "ReOrderno";

                    }).Bind(templateContainer.Text).Render();

                });
            });
        }
        settings.Columns.Add("LineNo").Visible = false;

        settings.Columns.Add(x =>
        {
            x.FieldName = "StyleImage"; x.Caption = " "; x.ReadOnly = true; x.EditFormSettings.Visible = DefaultBoolean.False;
            x.Settings.AllowAutoFilter = DefaultBoolean.False;
            x.SetDataItemTemplateContent(s =>
            {
                var styleimg = DataBinder.Eval(s.DataItem, "StyleImage");
                //ViewContext.Writer.Write(string.Format("<img src=\"{0}\" height=\"30\" width=\"35\" />", styleimg));
                Html.DevExpress().ImageZoom(zoom =>
                {
                    zoom.Name = "StyleImage" + Guid.NewGuid().ToString();
                    zoom.ImageUrl = styleimg.ToString();
                    zoom.Height = System.Web.UI.WebControls.Unit.Pixel(30);
                    zoom.Width = System.Web.UI.WebControls.Unit.Pixel(35);
                    zoom.LargeImageUrl = styleimg.ToString();
                    zoom.EnableExpandMode = true;
                    zoom.SettingsZoomMode.ZoomWindowHeight = System.Web.UI.WebControls.Unit.Pixel(600);
                    zoom.SettingsZoomMode.ZoomWindowWidth = System.Web.UI.WebControls.Unit.Pixel(700);
                    //zoom.ShowHint = Model.ShowHint;
                    //zoom.LargeImageLoadMode = Model.LargeImageLoadMode;
                    zoom.SettingsZoomMode.ZoomWindowPosition = ZoomWindowPosition.Right;
                    zoom.SettingsZoomMode.MouseBoxOpacityMode = MouseBoxOpacityMode.Inside;
                }).GetHtml();
            });
            x.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;


                Html.DevExpress().Image(lblsettings =>
                {
                    lblsettings.Name = "StyleImage";
                    lblsettings.Height = System.Web.UI.WebControls.Unit.Pixel(30);
                    lblsettings.Width = System.Web.UI.WebControls.Unit.Pixel(35);
                    //lblsettings.ControlStyle.CssClass = "align-middle";
                    //lblsettings.ClientVisible = visible;
                }).Bind(templateContainer.Text).Render();

            });
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "StyleId";
            col.Caption = "Style"; col.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                Html.DevExpress().Label(lblsettings =>
                {
                    lblsettings.Name = "StyleId";

                }).Bind(templateContainer.Text).Render();

            });
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "Description";
            col.Width = System.Web.UI.WebControls.Unit.Percentage(100); col.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                Html.DevExpress().Label(lblsettings =>
                {
                    lblsettings.Name = "Description";
                }).Bind(templateContainer.Text).Render();

            });
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "ColourId";
            col.Caption = "Colour"; col.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                Html.DevExpress().Label(lblsettings =>
                {
                    lblsettings.Name = "ColourId";
                }).Bind(templateContainer.Text).Render();

            });
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "SizeId";

            col.Caption = "Size"; col.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                Html.DevExpress().Label(lblsettings =>
                {
                    lblsettings.Name = "SizeId";
                }).Bind(templateContainer.Text).Render();

            });
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "OrdQty";
            col.Caption = "Order Qty";
            col.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;
                var OredrQty = (int)DataBinder.Eval(c.DataItem, "OrdQty");
                Html.DevExpress().SpinEdit(lblsettings =>
                {
                    lblsettings.Name = "OrdQty";
                    lblsettings.Properties.MinValue = 1;
                    lblsettings.Properties.MaxValue = 200;
                    lblsettings.Properties.AllowMouseWheel = false;
                    lblsettings.ControlStyle.ForeColor = System.Drawing.Color.Red;
                }).Bind(templateContainer.Text).Render();

            });
        });

        settings.Columns.Add(col =>
        {
            col.FieldName = "Points"; col.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                Html.DevExpress().Label(lblsettings =>
                {
                    lblsettings.Name = "Points";
                }).Bind(templateContainer.Text).Render();

            });
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "TotalPoints"; col.SetEditItemTemplateContent(c =>
            {
                GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                Html.DevExpress().Label(lblsettings =>
                {
                    lblsettings.Name = "TotalPoints";
                }).Bind(templateContainer.Text).Render();

            });
        });
        //  settings.Columns.Add("Emp");
        if (Session["Price"].ToString().ToLower() != "hide")
        {
            settings.Columns.Add(col =>
            {
                col.FieldName = "Price"; col.SetEditItemTemplateContent(c =>
                {
                    GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                    Html.DevExpress().Label(lblsettings =>
                    {
                        lblsettings.Name = "Price";
                    }).Bind(templateContainer.Text).Render();

                });
            });
            settings.Columns.Add(col =>
            {
                col.FieldName = "Total"; col.SetEditItemTemplateContent(c =>
                {
                    GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                    Html.DevExpress().Label(lblsettings =>
                    {
                        lblsettings.Name = "Total";
                    }).Bind(templateContainer.Text).Render();

                });
            });
            settings.Columns.Add(col =>
            {
                col.FieldName = "VAT"; col.SetEditItemTemplateContent(c =>
                {
                    GridViewEditItemTemplateContainer templateContainer = c as GridViewEditItemTemplateContainer;

                    Html.DevExpress().Label(lblsettings =>
                    {
                        lblsettings.Name = "VAT";
                    }).Bind(templateContainer.Text).Render();

                });
            });
        }


        //settings.Columns.Add("Employeename").Caption="Employee";
        //settings.Columns.Add(x =>
        //{
        //    x.FieldName = "StyleImage"; x.Caption = " "; x.ReadOnly = true; x.EditFormSettings.Visible = DefaultBoolean.False;
        //    x.Settings.AllowAutoFilter = DefaultBoolean.False;
        //    x.SetDataItemTemplateContent(s =>
        //    {
        //        var styleimg = DataBinder.Eval(s.DataItem, "StyleImage");
        //        //ViewContext.Writer.Write(string.Format("<img src=\"{0}\" height=\"30\" width=\"35\" />", styleimg));
        //        Html.DevExpress().ImageZoom(zoom =>
        //        {
        //            zoom.Name = "StyleImage" + Guid.NewGuid().ToString();
        //            zoom.ImageUrl = styleimg.ToString();
        //            zoom.Height = System.Web.UI.WebControls.Unit.Pixel(30);
        //            zoom.Width = System.Web.UI.WebControls.Unit.Pixel(35);
        //            zoom.LargeImageUrl = styleimg.ToString();
        //            zoom.EnableExpandMode = true;
        //            zoom.SettingsZoomMode.ZoomWindowHeight = System.Web.UI.WebControls.Unit.Pixel(600);
        //            zoom.SettingsZoomMode.ZoomWindowWidth = System.Web.UI.WebControls.Unit.Pixel(700);
        //            //zoom.ShowHint = Model.ShowHint;
        //            //zoom.LargeImageLoadMode = Model.LargeImageLoadMode;
        //            zoom.SettingsZoomMode.ZoomWindowPosition = ZoomWindowPosition.Right;
        //            zoom.SettingsZoomMode.MouseBoxOpacityMode = MouseBoxOpacityMode.Inside;
        //        }).GetHtml();
        //    });
        //});
        //settings.Columns.Add("StyleId");
        //settings.Columns.Add("Description");
        //settings.Columns.Add("ColourId");
        //settings.Columns.Add("SizeId");
        //settings.Columns.Add("OrdQty").Caption = "Reorder qty";


        //settings.Columns.Add("Reason");
        //settings.Columns.Add("Points");
        //settings.Columns.Add("TotalPoints");
        //if (Session["Price"].ToString().ToLower() != "hide")
        //{
        //    settings.Columns.Add("Price");
        //    settings.Columns.Add("Total");
        //    settings.Columns.Add("VAT");
        //}
        ////settings.Columns.Add("Emp");
    });
    if (ViewData["EditError1"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError1"]);
    }
}
@grid.Bind(Model).GetHtml()