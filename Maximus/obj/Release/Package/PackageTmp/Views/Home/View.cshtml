

@{
    var cardView = Html.DevExpress().CardView(settings =>
    {
        #region settings
        settings.Name = "Dimalloc"+Guid.NewGuid().ToString();

        settings.SettingsPager.SettingsTableLayout.ColumnCount = 2;

        settings.SettingsPager.SettingsTableLayout.ColumnCount = 2;
        settings.SettingsPager.SettingsTableLayout.RowsPerPage = 10;
        settings.SettingsPopup.EditForm.Width = 600;
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.SettingsEditing.Mode = CardViewEditingMode.EditForm;

        settings.SettingsBehavior.ConfirmDelete = true;
        settings.KeyFieldName = "StyleID";
        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowHeaderPanel = false;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.Settings.EnableFilterControlPopupMenuScrolling = false;
        settings.SettingsBehavior.AllowSelectByCardClick = true;
        settings.Settings.ShowHeaderPanel = true;
        settings.ClientSideEvents.BeginCallback = "BeginCallback";

        Maximus.Models.e4kmaximusdbEntities entity = new Maximus.Models.e4kmaximusdbEntities();
        settings.SetHeaderPanelTemplateContent(r =>
        {

            ViewContext.Writer.Write(string.Format(" "));

        });
        #endregion

        #region cardview Column defenitions
        settings.Columns.Add("StyleID");
        settings.Columns.Add("ColourId");
        settings.Columns.Add("SizeId");
        settings.Columns.Add("Description");
        settings.Columns.Add("Price");

        settings.Columns.Add(c =>
        {
            c.FieldName = "StyleImage";
        });

        #endregion

        #region cardviewlayoutproperties defenition
        settings.CardLayoutProperties.ColCount = 2;
        settings.CardLayoutProperties.Items.Add(i =>
        {
            i.ColumnName = "StyleImage";
            i.ShowCaption = DefaultBoolean.False;
            i.RowSpan = 6;
            i.VerticalAlign = FormLayoutVerticalAlign.Middle;
            i.SetTemplateContent(x =>
            {

                var Assembly = Convert.ToInt16(DataBinder.Eval(x.DataItem, "Assembly"));
                var style = DataBinder.Eval(x.DataItem, "StyleID");
                var styleimg = DataBinder.Eval(x.DataItem, "StyleImage");
                ViewContext.Writer.Write(string.Format("<br/><br/><img src=\"{0}\" height='150' width='150' onclick='Getimage(\"{0}\")' /> <br/><br/>", styleimg));
            });

        });
        settings.CardLayoutProperties.Items.Add(x =>
        {
            x.ColumnName = "StyleID";
            x.Caption = "Style";
            x.SetTemplateContent(col =>
            {
                var style = (DataBinder.Eval(col.DataItem, "StyleID")).ToString();
                Html.RenderPartial("Model/_StyleDrop", entity.styleby_freetextview.Where(s => s.StyleID.Contains(style)).Select(s=>new Maximus.Models.styleViewmodel {StyleID=s.StyleID }).FirstOrDefault());
            });


        });

        settings.CardLayoutProperties.Items.Add(x =>
        {
            x.ColumnName = "Description";
            x.SetTemplateContent(col =>
            {
                var style = (DataBinder.Eval(col.DataItem, "StyleID")).ToString();

                if (style.Contains(','))
                {
                    var styleArr = style.Split(',');
                    var style1 = styleArr[0];
                    ViewContext.Writer.Write(string.Format("<div id='LbDescription" + style1 + "'>{0}</div>", entity.tblfsk_style.Where(s => s.StyleID == style1).FirstOrDefault().Description));
                }
                else
                {
                    ViewContext.Writer.Write(string.Format("<div id='LbDescription" + style + "'>{0}</div>", entity.tblfsk_style.Where(s => s.StyleID == style).FirstOrDefault().Description != null ? entity.tblfsk_style.Where(s => s.StyleID == style).FirstOrDefault().Description.ToString() : ""));
                }
            });
        });
        settings.CardLayoutProperties.Items.Add(x =>
        {
            x.ColumnName = "ColourId";
            x.Caption = "Colour";
            x.SetTemplateContent(col =>
            {
                var style = (DataBinder.Eval(col.DataItem, "StyleID")).ToString();
                Html.RenderPartial("Model/_ColorDrop", entity.styleby_freetextview.Where(s => s.StyleID.Contains(style)).Select(s => new Maximus.Models.styleViewmodel { StyleID = s.StyleID }).FirstOrDefault());

            });

        });
        settings.CardLayoutProperties.Items.Add(x =>
        {
            x.ColumnName = "SizeId";
            x.Caption = "Size";
            x.SetTemplateContent(col =>
            {
                var style = (DataBinder.Eval(col.DataItem, "StyleID")).ToString();
                 
                Html.RenderPartial("Model/_SizeDrop", entity.styleby_freetextview.Where(s => s.StyleID.Contains(style)).Select(s => new Maximus.Models.styleViewmodel { StyleID = s.StyleID }).FirstOrDefault());

               
            });

        });
        settings.CardLayoutProperties.Items.Add(x =>
        {
            x.ColumnName = "Price";
            x.Caption = "Price";
            x.SetTemplateContent(col =>
            {
                var style = (DataBinder.Eval(col.DataItem, "StyleID")).ToString();
                if (style.Contains(','))
                {
                    var styleArr = style.Split(',');
                    string style1 = styleArr[0].ToString();
                    var color = entity.tblfsk_style_colour.Any(s => s.StyleID == style1) == true ? entity.tblfsk_style_colour.Where(s => s.StyleID == style1).OrderBy(s => s.ColourID).FirstOrDefault().ColourID : "";
                    var size = entity.tblfsk_style_sizes.Any(s => s.StyleID == style1) == true ? entity.tblfsk_style_sizes.Where(s => s.StyleID == style1).OrderBy(s => s.SeqNo).Count() == 1 ? entity.tblfsk_style_sizes.Where(s => s.StyleID == style1).OrderBy(s => s.SeqNo).FirstOrDefault().SizeID : "" : "";
                    var price = size == "" ? "" : entity.getstylesviews.Any(s => s.StyleID == style1) == false ? "" : System.Math.Round(entity.getstylesviews.Where(s => s.StyleID == style1 && s.SizeID == size && s.ColourID == color).FirstOrDefault().Price.Value, 2).ToString();
                    ViewContext.Writer.Write(string.Format("<div id='LbPrice1" + style + "'>{0}</div>", price));
                }
                else
                {
                    var color = entity.tblfsk_style_colour.Any(s => s.StyleID == style) == true ? entity.tblfsk_style_colour.Where(s => s.StyleID == style).OrderBy(s => s.ColourID).FirstOrDefault().ColourID : "";
                    var size = entity.tblfsk_style_sizes.Any(s => s.StyleID == style) == true ? entity.tblfsk_style_sizes.Where(s => s.StyleID == style).OrderBy(s => s.SeqNo).Count() == 1 ? entity.tblfsk_style_sizes.Where(s => s.StyleID == style).OrderBy(s => s.SeqNo).FirstOrDefault().SizeID : "" : "";
                    var price = size == "" ? "" : entity.getstylesviews.Any(s => s.StyleID == style) == false ? "" : System.Math.Round(entity.getstylesviews.Where(s => s.StyleID == style && s.SizeID == size && s.ColourID == color).FirstOrDefault().Price.Value, 2).ToString();
                    ViewContext.Writer.Write(string.Format("<div id='LbPrice1" + style + "'>{0}</div>", price));
                }
            });


        });

        #endregion

        #region assigning values to the combobox
        #endregion
    });
    if (ViewData["EditError"] != null)
    {
        cardView.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@cardView.Bind(Model).GetHtml()


